/* Autogenerated with kurento-module-creator */

#include <gst/gst.h>
#include "MediaPipeline.hpp"
#include <ArMarkerdetectorImplFactory.hpp>
#include "ArMarkerdetectorImpl.hpp"
#include <jsonrpc/JsonSerializer.hpp>
#include <KurentoException.hpp>
#include "MediaPipelineImpl.hpp"

#define GST_CAT_DEFAULT kurento_ar_markerdetector_impl
GST_DEBUG_CATEGORY_STATIC (GST_CAT_DEFAULT);
#define GST_DEFAULT_NAME "KurentoArMarkerdetectorImpl"

namespace kurento
{
namespace module
{
namespace markerdetector
{

ArMarkerdetectorImpl::ArMarkerdetectorImpl (const boost::property_tree::ptree &config, std::shared_ptr<MediaPipeline> mediaPipeline) : OpenCVFilterImpl (config, std::dynamic_pointer_cast<MediaPipelineImpl> (mediaPipeline) )

{
}

void ArMarkerdetectorImpl::setShowDebugLevel (int showDebugLevel)
{
  ArMarkerdetectorOpenCVImpl::setShowDebugLevel (showDebugLevel);
}

void ArMarkerdetectorImpl::setOffset (double x, double y, double z)
{
  ArMarkerdetectorOpenCVImpl::setOffset (x, y, z);
}

int ArMarkerdetectorImpl::getShowDebugLevel ()
{
  ArMarkerdetectorOpenCVImpl::getShowDebugLevel ();
}

void ArMarkerdetectorImpl::setOverlayImage (const std::string &overlayImage)
{
  ArMarkerdetectorOpenCVImpl::setOverlayImage (overlayImage);
}

std::string ArMarkerdetectorImpl::getOverlayImage ()
{
  ArMarkerdetectorOpenCVImpl::getOverlayImage ();
}

void ArMarkerdetectorImpl::setOverlayText (const std::string &overlayText)
{
  ArMarkerdetectorOpenCVImpl::setOverlayText (overlayText);
}

std::string ArMarkerdetectorImpl::getOverlayText ()
{
  ArMarkerdetectorOpenCVImpl::getOverlayText ();
}

void ArMarkerdetectorImpl::setOverlayScale (float overlayScale)
{
  ArMarkerdetectorOpenCVImpl::setOverlayScale (overlayScale);
}

float ArMarkerdetectorImpl::getOverlayScale ()
{
  ArMarkerdetectorOpenCVImpl::getOverlayScale ();
}

MediaObjectImpl *
ArMarkerdetectorImplFactory::createObject (const boost::property_tree::ptree &config, std::shared_ptr<MediaPipeline> mediaPipeline) const
{
  return new ArMarkerdetectorImpl (config, mediaPipeline);
}

ArMarkerdetectorImpl::StaticConstructor ArMarkerdetectorImpl::staticConstructor;

ArMarkerdetectorImpl::StaticConstructor::StaticConstructor()
{
  GST_DEBUG_CATEGORY_INIT (GST_CAT_DEFAULT, GST_DEFAULT_NAME, 0,
                           GST_DEFAULT_NAME);
}

} /* markerdetector */
} /* module */
} /* kurento */
